name: Deploy to ECS

on:
  push:
    branches:
      - main  # or the branch you want to trigger the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Set in GitHub Secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Set in GitHub Secrets
          aws-region: us-east-1  # Your AWS region

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # The ECR registry URL
          ECR_REPOSITORY: hello-world-nodejs  # Your ECR repository name
          IMAGE_TAG: latest  # The image tag
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # The ECR registry URL
          ECR_REPOSITORY: hello-world-nodejs  # Your ECR repository name
          IMAGE_TAG: latest  # The image tag
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var "image_url=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
